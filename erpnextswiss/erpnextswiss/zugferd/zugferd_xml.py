# -*- coding: utf-8 -*-
# Copyright (c) 2018-2019, libracore (https://www.libracore.com) and contributors
# For license information, please see license.txt
#
#
# This is an xml content wrapper for ERPNext Sales Invoice and Purchase Invoice to ZUGFeRD XML
#
#
import frappe
from erpnextswiss.erpnextswiss.common_functions import make_line

"""
Creates an XML file from a sales invoice

:params:sales_invoice:   document name of the sale invoice
:returns:                xml content (string)
"""
def create_zugferd_xml(sales_invoice):
    try:
        # get original document
        sinv = frappe.get_doc("Sales Invoice", sales_invoice)
        # compile xml content, header
        xml = make_line("<?xml version='1.0' encoding='UTF-8' ?>")
        xml += make_line("<rsm:CrossIndustryInvoice xmlns:a=\"urn:un:unece:uncefact:data:standard:QualifiedDataType:100\" xmlns:rsm=\"urn:un:unece:uncefact:data:standard:CrossIndustryInvoice:100\" xmlns:qdt=\"urn:un:unece:uncefact:data:standard:QualifiedDataType:10\" xmlns:ram=\"urn:un:unece:uncefact:data:standard:ReusableAggregateBusinessInformationEntity:100\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:udt=\"urn:un:unece:uncefact:data:standard:UnqualifiedDataType:100\">")
        xml += make_line("  <rsm:ExchangedDocumentContext>")
        xml += make_line("    <ram:GuidelineSpecifiedDocumentContextParameter>")
        xml += make_line("      <ram:ID>urn:cen.eu:en16931:2017</ram:ID>")
        xml += make_line("    </ram:GuidelineSpecifiedDocumentContextParameter>")
        xml += make_line("  </rsm:ExchangedDocumentContext>")
        xml += make_line("  <rsm:ExchangedDocument>")
        # document ID
        xml += make_line("    <ram:ID>{id}</ram:ID>".format(id=sinv.name))
        xml += make_line("    <ram:TypeCode>380</ram:TypeCode>")
        # posting date as "20180305"
        xml += make_line("    <ram:IssueDateTime>")
        xml += make_line("      <udt:DateTimeString format=\"102\">{year}{month}{day}</udt:DateTimeString>".format(year=sinv.posting_date.year, month=sinv.posting_date.month, day=sinv.posting_date.day))
        xml += make_line("    </ram:IssueDateTime>")
        # note to the invoice
        xml += make_line("    <ram:IncludedNote>")
        xml += make_line("      <ram:Content>Rechnung gemäß Bestellung vom 01.03.2018.</ram:Content>")
        xml += make_line("    </ram:IncludedNote>")
        # details of the invoice issuing company
        xml += make_line("    <ram:IncludedNote>")
        xml += make_line("      <ram:Content>{company}\r\n{address}\r\nGeschäftsführer: {ceo}\r\nHandelsregisternummer: {tax_id}</ram:Content>")
        xml += make_line("      <ram:SubjectCode>REG</ram:SubjectCode>")
        xml += make_line("    </ram:IncludedNote>")
        xml += make_line("  </rsm:ExchangedDocument>")
        xml += make_line("  <rsm:SupplyChainTradeTransaction>")
        xml += make_line("    <ram:IncludedSupplyChainTradeLineItem>")
        xml += make_line("      <ram:AssociatedDocumentLineDocument>")
        xml += make_line("        <ram:LineID>1</ram:LineID>")
        xml += make_line("      </ram:AssociatedDocumentLineDocument>")
        xml += make_line("      <ram:SpecifiedTradeProduct>")
        xml += make_line("        <ram:GlobalID schemeID=\"0160\">4012345001235</ram:GlobalID>")
        xml += make_line("        <ram:SellerAssignedID>TB100A4</ram:SellerAssignedID>")
        xml += make_line("        <ram:Name>Trennblätter A4</ram:Name>")
        xml += make_line("      </ram:SpecifiedTradeProduct>")
        xml += make_line("      <ram:SpecifiedLineTradeAgreement>")
        xml += make_line("        <ram:GrossPriceProductTradePrice>")
        xml += make_line("          <ram:ChargeAmount>9.9000</ram:ChargeAmount>")
        xml += make_line("        </ram:GrossPriceProductTradePrice>")
        xml += make_line("        <ram:NetPriceProductTradePrice>")
        xml += make_line("          <ram:ChargeAmount>9.9000</ram:ChargeAmount>")
        xml += make_line("        </ram:NetPriceProductTradePrice>")
        xml += make_line("      </ram:SpecifiedLineTradeAgreement>")
        xml += make_line("      <ram:SpecifiedLineTradeDelivery>")
        xml += make_line("        <ram:BilledQuantity unitCode=\"C62\">20.0000</ram:BilledQuantity>")
        xml += make_line("      </ram:SpecifiedLineTradeDelivery>")
        xml += make_line("      <ram:SpecifiedLineTradeSettlement>")
        xml += make_line("        <ram:ApplicableTradeTax>")
        xml += make_line("          <ram:TypeCode>VAT</ram:TypeCode>")
        xml += make_line("          <ram:CategoryCode>S</ram:CategoryCode>")
        xml += make_line("          <ram:RateApplicablePercent>19.00</ram:RateApplicablePercent>")
        xml += make_line("        </ram:ApplicableTradeTax>")
        xml += make_line("        <ram:SpecifiedTradeSettlementLineMonetarySummation>")
        xml += make_line("          <ram:LineTotalAmount>198.00</ram:LineTotalAmount>")
        xml += make_line("        </ram:SpecifiedTradeSettlementLineMonetarySummation>")
        xml += make_line("      </ram:SpecifiedLineTradeSettlement>")
        xml += make_line("    </ram:IncludedSupplyChainTradeLineItem>")
        xml += make_line("    <ram:IncludedSupplyChainTradeLineItem>")
        xml += make_line("      <ram:AssociatedDocumentLineDocument>")
        xml += make_line("        <ram:LineID>2</ram:LineID>")
        xml += make_line("      </ram:AssociatedDocumentLineDocument>")
        xml += make_line("      <ram:SpecifiedTradeProduct>")
        xml += make_line("        <ram:GlobalID schemeID=\"0160\">4000050986428</ram:GlobalID>")
        xml += make_line("        <ram:SellerAssignedID>ARNR2</ram:SellerAssignedID>")
        xml += make_line("        <ram:Name>Joghurt Banane</ram:Name>")
        xml += make_line("      </ram:SpecifiedTradeProduct>")
        xml += make_line("      <ram:SpecifiedLineTradeAgreement>")
        xml += make_line("        <ram:GrossPriceProductTradePrice>")
        xml += make_line("          <ram:ChargeAmount>5.5000</ram:ChargeAmount>")
        xml += make_line("        </ram:GrossPriceProductTradePrice>")
        xml += make_line("        <ram:NetPriceProductTradePrice>")
        xml += make_line("          <ram:ChargeAmount>5.5000</ram:ChargeAmount>")
        xml += make_line("        </ram:NetPriceProductTradePrice>")
        xml += make_line("      </ram:SpecifiedLineTradeAgreement>")
        xml += make_line("      <ram:SpecifiedLineTradeDelivery>")
        xml += make_line("        <ram:BilledQuantity unitCode=\"C62\">50.0000</ram:BilledQuantity>")
        xml += make_line("      </ram:SpecifiedLineTradeDelivery>")
        xml += make_line("      <ram:SpecifiedLineTradeSettlement>")
        xml += make_line("        <ram:ApplicableTradeTax>")
        xml += make_line("          <ram:TypeCode>VAT</ram:TypeCode>")
        xml += make_line("          <ram:CategoryCode>S</ram:CategoryCode>")
        xml += make_line("          <ram:RateApplicablePercent>7.00</ram:RateApplicablePercent>")
        xml += make_line("        </ram:ApplicableTradeTax>")
        xml += make_line("        <ram:SpecifiedTradeSettlementLineMonetarySummation>")
        xml += make_line("          <ram:LineTotalAmount>275.00</ram:LineTotalAmount>")
        xml += make_line("        </ram:SpecifiedTradeSettlementLineMonetarySummation>")
        xml += make_line("      </ram:SpecifiedLineTradeSettlement>")
        xml += make_line("    </ram:IncludedSupplyChainTradeLineItem>")
        xml += make_line("    <ram:ApplicableHeaderTradeAgreement>")
        xml += make_line("      <ram:SellerTradeParty>")
        xml += make_line("        <ram:GlobalID schemeID=\"0088\">4000001123452</ram:GlobalID>")
        xml += make_line("        <ram:Name>Lieferant GmbH</ram:Name>")
        xml += make_line("        <ram:PostalTradeAddress>")
        xml += make_line("          <ram:PostcodeCode>80333</ram:PostcodeCode>")
        xml += make_line("          <ram:LineOne>Lieferantenstraße 20</ram:LineOne>")
        xml += make_line("          <ram:CityName>München</ram:CityName>")
        xml += make_line("          <ram:CountryID>DE</ram:CountryID>")
        xml += make_line("        </ram:PostalTradeAddress>")
        xml += make_line("        <ram:SpecifiedTaxRegistration>")
        xml += make_line("          <ram:ID schemeID=\"FC\">201/113/40209</ram:ID>")
        xml += make_line("        </ram:SpecifiedTaxRegistration>")
        xml += make_line("        <ram:SpecifiedTaxRegistration>")
        xml += make_line("          <ram:ID schemeID=\"VA\">DE123456789</ram:ID>")
        xml += make_line("        </ram:SpecifiedTaxRegistration>")
        xml += make_line("      </ram:SellerTradeParty>")
        xml += make_line("      <ram:BuyerTradeParty>")
        xml += make_line("        <ram:ID>GE2020211</ram:ID>")
        xml += make_line("        <ram:GlobalID schemeID=\"0088\">4000001987658</ram:GlobalID>")
        xml += make_line("        <ram:Name>Kunden AG Mitte</ram:Name>")
        xml += make_line("        <ram:PostalTradeAddress>")
        xml += make_line("          <ram:PostcodeCode>69876</ram:PostcodeCode>")
        xml += make_line("          <ram:LineOne>Kundenstraße 15</ram:LineOne>")
        xml += make_line("          <ram:CityName>Frankfurt</ram:CityName>")
        xml += make_line("          <ram:CountryID>DE</ram:CountryID>")
        xml += make_line("        </ram:PostalTradeAddress>")
        xml += make_line("      </ram:BuyerTradeParty>")
        xml += make_line("    </ram:ApplicableHeaderTradeAgreement>")
        xml += make_line("    <ram:ApplicableHeaderTradeDelivery>")
        xml += make_line("      <ram:ActualDeliverySupplyChainEvent>")
        xml += make_line("        <ram:OccurrenceDateTime>")
        xml += make_line("          <udt:DateTimeString format=\"102\">20180305</udt:DateTimeString>")
        xml += make_line("        </ram:OccurrenceDateTime>")
        xml += make_line("      </ram:ActualDeliverySupplyChainEvent>")
        xml += make_line("    </ram:ApplicableHeaderTradeDelivery>")
        xml += make_line("    <ram:ApplicableHeaderTradeSettlement>")
        xml += make_line("      <ram:InvoiceCurrencyCode>EUR</ram:InvoiceCurrencyCode>")
        xml += make_line("      <ram:ApplicableTradeTax>")
        xml += make_line("        <ram:CalculatedAmount>19.25</ram:CalculatedAmount>")
        xml += make_line("        <ram:TypeCode>VAT</ram:TypeCode>")
        xml += make_line("        <ram:BasisAmount>275.00</ram:BasisAmount>")
        xml += make_line("        <ram:CategoryCode>S</ram:CategoryCode>")
        xml += make_line("        <ram:RateApplicablePercent>7.00</ram:RateApplicablePercent>")
        xml += make_line("      </ram:ApplicableTradeTax>")
        xml += make_line("      <ram:ApplicableTradeTax>")
        xml += make_line("        <ram:CalculatedAmount>37.62</ram:CalculatedAmount>")
        xml += make_line("        <ram:TypeCode>VAT</ram:TypeCode>")
        xml += make_line("        <ram:BasisAmount>198.00</ram:BasisAmount>")
        xml += make_line("        <ram:CategoryCode>S</ram:CategoryCode>")
        xml += make_line("        <ram:RateApplicablePercent>19.00</ram:RateApplicablePercent>")
        xml += make_line("      </ram:ApplicableTradeTax>")
        xml += make_line("      <ram:SpecifiedTradePaymentTerms>")
        xml += make_line("        <ram:Description>Zahlbar innerhalb 30 Tagen netto bis 04.04.2018, 3% Skonto innerhalb 10 Tagen bis 15.03.2018</ram:Description>")
        xml += make_line("      </ram:SpecifiedTradePaymentTerms>")
        xml += make_line("      <ram:SpecifiedTradeSettlementHeaderMonetarySummation>")
        xml += make_line("        <ram:LineTotalAmount>473.00</ram:LineTotalAmount>")
        xml += make_line("        <ram:ChargeTotalAmount>0.00</ram:ChargeTotalAmount>")
        xml += make_line("        <ram:AllowanceTotalAmount>0.00</ram:AllowanceTotalAmount>")
        xml += make_line("        <ram:TaxBasisTotalAmount>473.00</ram:TaxBasisTotalAmount>")
        xml += make_line("		<ram:TaxTotalAmount currencyID="EUR">56.87</ram:TaxTotalAmount>")
        xml += make_line("        <ram:GrandTotalAmount>529.87</ram:GrandTotalAmount>")
        xml += make_line("        <ram:TotalPrepaidAmount>0.00</ram:TotalPrepaidAmount>")
        xml += make_line("        <ram:DuePayableAmount>529.87</ram:DuePayableAmount>")
        xml += make_line("      </ram:SpecifiedTradeSettlementHeaderMonetarySummation>")
        xml += make_line("    </ram:ApplicableHeaderTradeSettlement>")
        xml += make_line("  </rsm:SupplyChainTradeTransaction>")
        xml += make_line("</rsm:CrossIndustryInvoice>")
        
        return xml
    except Exception as err:
        return "Unable to open sales invoice: {0}".format(err)

"""
Extracts the relevant content for a purchase invoice from a ZUGFeRD XML

:params:zugferd_xml:    xml content (string)
:return:                simplified dict with content
"""
def get_content_from_zugferd(zugferd_xml):
    
